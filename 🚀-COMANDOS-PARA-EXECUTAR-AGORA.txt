╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║           🚀 COMANDOS PARA EXECUTAR AGORA (COPIE E COLE)                    ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

SITUAÇÃO DETECTADA:
  • Seu branch local está 5 commits ATRÁS do GitHub
  • Você tem arquivos modificados localmente
  • Você tem arquivos novos (untracked)

SOLUÇÃO: Fazer merge das mudanças remotas e depois enviar as suas


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 1: PUXAR MUDANÇAS DO GITHUB (SINCRONIZAR)                             │
└──────────────────────────────────────────────────────────────────────────────┘

Execute este comando:

git pull origin main --no-rebase

O que isso faz:
  • Puxa os 5 commits que estão no GitHub
  • Faz merge com suas mudanças locais
  • Mantém tudo sincronizado

⚠️  Pode abrir um editor pedindo mensagem de merge:
    • Se abrir VIM: Digite ":wq" e pressione ENTER
    • Se abrir Nano: Pressione Ctrl+X, depois Y, depois ENTER
    • Ou apenas feche a janela se for editor gráfico


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 2: ADICIONAR TODOS OS ARQUIVOS                                         │
└──────────────────────────────────────────────────────────────────────────────┘

git add .


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 3: FAZER COMMIT                                                        │
└──────────────────────────────────────────────────────────────────────────────┘

git commit -m "v6.10.0 + v6.3.5: Estatísticas, CSV Otimizado, Header Atualizado

- Admin v6.10.0: Estatísticas em tempo real, CSV 23 campos, 6 ferramentas
- Cliente v6.3.5: Header 'Black Friday Prio 2025' com gradiente colorido
- Documentação completa e guias de deploy"


┌──────────────────────────────────────────────────────────────────────────────┐
│ PASSO 4: FAZER PUSH                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

git push origin main


╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                    📋 TODOS OS COMANDOS JUNTOS                               ║
║                          (COPIE ESTE BLOCO)                                  ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

git pull origin main --no-rebase
git add .
git commit -m "v6.10.0 + v6.3.5: Estatísticas, CSV Otimizado, Header Atualizado"
git push origin main


═══════════════════════════════════════════════════════════════════════════════

⏱️  TEMPO ESTIMADO:
  • git pull: 5-10 segundos
  • git add: 2 segundos
  • git commit: 1 segundo
  • git push: 10-30 segundos
  • Build Cloudflare: 3-4 minutos

═══════════════════════════════════════════════════════════════════════════════


✅ APÓS O PUSH BEM-SUCEDIDO:

Você verá algo como:

  remote: Resolving deltas: 100% (X/X), done.
  To https://github.com/genautech/priobf25.git
     abc1234..def5678  main -> main

Aguarde 3-4 minutos e acesse:
  • https://priobf25.pages.dev/admin (v6.10.0)
  • https://priobf25.pages.dev/cliente (v6.3.5)


═══════════════════════════════════════════════════════════════════════════════

🧪 TESTE APÓS O DEPLOY:

ADMIN:
  [ ] /admin → Aba Sugestões → 4 cards coloridos
  [ ] /admin → Aba Ferramentas → 6 cards apenas
  [ ] /admin → Exportar CSV → 23 colunas

CLIENTE:
  [ ] /cliente → Header "Black Friday Prio 2025" (colorido)
  [ ] /cliente → Subtítulo menor

💡 Não vê mudanças? Ctrl+Shift+R (hard refresh)


═══════════════════════════════════════════════════════════════════════════════

🆘 SE DER ERRO:

ERRO: "conflict" ou "merge conflict"
  → Significa que há conflito entre suas mudanças e as do GitHub
  → Solução rápida:
    git merge --abort
    git stash
    git pull origin main
    git stash pop
    git add .
    git commit -m "v6.10.0 + v6.3.5: Updates"
    git push origin main

ERRO: "Authentication failed"
  → Configure autenticação:
    gh auth login
    (ou use token pessoal)

ERRO: "Permission denied"
  → Você não tem acesso ao repositório
  → Verifique se está logado na conta correta


═══════════════════════════════════════════════════════════════════════════════

COMECE AGORA:

Cole estes 4 comandos no terminal:

git pull origin main --no-rebase
git add .
git commit -m "v6.10.0 + v6.3.5: Estatísticas, CSV Otimizado, Header Atualizado"
git push origin main

✅ PRONTO!
