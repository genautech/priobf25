üß™ GUIA DE TESTE - CORRE√á√ïES v6.2 + v6.6
========================================

üìã PROBLEMAS CORRIGIDOS:

1. ‚úÖ Modal do Admin n√£o atualizava detalhes do produto
2. ‚úÖ Controles de quantidade do cliente n√£o funcionavam


üîß CORRE√á√ïES APLICADAS:
========================

## 1Ô∏è‚É£ ADMIN (admin-v6.6.html)

### Problema:
- Modal de detalhes n√£o mostrava dados atualizados ap√≥s edi√ß√£o
- Lista mostrava corretamente, mas modal tinha dados antigos

### Solu√ß√£o:
- Adicionado fun√ß√£o alias `abrirCrudModal()` (linha ~1430)
- Alguns c√≥digos chamavam `abrirCrudModal()` mas a fun√ß√£o real era `openCrudModal()`

### Arquivo: admin-v6.6.html
```javascript
// Alias para compatibilidade
function abrirCrudModal(mode, productId = null) {
    openCrudModal(mode, productId);
}
```


## 2Ô∏è‚É£ CLIENTE (cliente-analise-v6.2.html)

### Problema:
- Bot√µes +/- de quantidade n√£o respondiam a cliques
- Input de quantidade n√£o atualizava
- UI n√£o refletia mudan√ßas de quantidade

### Solu√ß√µes Aplicadas:

#### A) Adicionado renderProducts() em updateQuantity()
**Antes:**
```javascript
function updateQuantity(productId, quantity) {
    productQuantities[id] = qtd;
    updateSelectionStats();
    saveSelection();  // Faltava renderProducts()!
}
```

**Depois:**
```javascript
function updateQuantity(productId, quantity) {
    productQuantities[id] = qtd;
    updateSelectionStats();
    renderProducts();  // ‚úÖ CORRIGIDO: Re-renderiza UI
    saveSelection();
}
```

#### B) Melhorado event.stopPropagation()
**Antes:**
```html
<div class="mb-3 p-3 bg-purple-50 rounded-lg border-2 border-purple-200">
    <button onclick="event.stopPropagation(); decrementQuantity('${produto.id}')">
```

**Depois:**
```html
<div onclick="event.stopPropagation()">  <!-- ‚úÖ Container tamb√©m para propaga√ß√£o -->
    <button onclick="event.stopPropagation(); decrementQuantity('${produto.id}'); return false;"
            type="button">  <!-- ‚úÖ Adicionado type="button" e return false -->
```

#### C) Melhorado input de quantidade
**Antes:**
```html
<input onchange="event.stopPropagation(); updateQuantity('${produto.id}', this.value)">
```

**Depois:**
```html
<input oninput="event.stopPropagation(); updateQuantity('${produto.id}', this.value)"
       onchange="event.stopPropagation(); updateQuantity('${produto.id}', this.value)"
       onfocus="this.select()">  <!-- ‚úÖ Responde a oninput + seleciona ao focar -->
```

#### D) Adicionado logs de debug
- Console.log em todas fun√ß√µes de quantidade
- Console.error quando produto n√£o encontrado
- Console.warn quando limites atingidos


üìù COMO TESTAR:
===============

## TESTE 1: Modal do Admin ‚úÖ
------------------------------
1. Abra: admin-v6.6.html
2. Clique no √≠cone de "olho" (üëÅÔ∏è) de qualquer produto
3. Modal deve abrir com dados corretos
4. Feche o modal
5. Edite o produto (√≠cone l√°pis ‚úèÔ∏è)
6. Mude o nome, pre√ßo ou qualquer campo
7. Salve as altera√ß√µes
8. Clique novamente no √≠cone de "olho" (üëÅÔ∏è)
9. ‚úÖ VERIFICAR: Modal deve mostrar dados ATUALIZADOS

**Console esperado:**
- Nenhum erro
- Dados devem coincidir com a lista


## TESTE 2: Controles de Quantidade do Cliente ‚úÖ
--------------------------------------------------
1. Abra: cliente-analise-v6.2.html
2. Espere carregar produtos
3. Clique em "Adicionar √† Sele√ß√£o" em qualquer produto
4. Controles de quantidade devem aparecer (caixa roxa)

### Teste 2A: Bot√£o de Incremento (+)
- Clique no bot√£o "+"
- ‚úÖ VERIFICAR: N√∫mero deve aumentar
- ‚úÖ VERIFICAR: "Investimento" abaixo deve atualizar
- ‚úÖ VERIFICAR: Estat√≠sticas no topo devem atualizar
- **Console esperado:** "Incrementando quantidade do produto..."

### Teste 2B: Bot√£o de Decremento (-)
- Clique no bot√£o "-"
- ‚úÖ VERIFICAR: N√∫mero deve diminuir
- ‚úÖ VERIFICAR: N√£o deve ir abaixo de 1
- **Console esperado:** "Decrementando quantidade do produto..."

### Teste 2C: Input Manual
- Clique no campo de n√∫mero
- Digite um valor (ex: 5)
- Pressione Enter ou clique fora
- ‚úÖ VERIFICAR: Valor deve ser aceito (se <= estoque)
- ‚úÖ VERIFICAR: Estat√≠sticas devem atualizar
- **Console esperado:** "Atualizando quantidade do produto..."

### Teste 2D: Limites
- Tente aumentar al√©m do estoque dispon√≠vel
- ‚úÖ VERIFICAR: N√£o deve passar do m√°ximo
- **Console esperado:** "Quantidade m√°xima atingida..."
- Tente diminuir abaixo de 1
- ‚úÖ VERIFICAR: N√£o deve ir abaixo de 1
- **Console esperado:** "Quantidade m√≠nima atingida..."

### Teste 2E: Persist√™ncia
- Ajuste quantidades de v√°rios produtos
- Recarregue a p√°gina (F5)
- ‚úÖ VERIFICAR: Quantidades devem ser mantidas


## TESTE 3: Cliques no Card ‚úÖ
-------------------------------
1. Com produtos selecionados e quantidade ajustada
2. Clique em QUALQUER PARTE do card FORA dos controles de quantidade
3. ‚úÖ VERIFICAR: Modal de detalhes deve abrir
4. Feche o modal
5. Clique nos BOT√ïES +/- ou INPUT de quantidade
6. ‚úÖ VERIFICAR: Modal N√ÉO deve abrir
7. ‚úÖ VERIFICAR: Apenas a quantidade deve mudar


## TESTE 4: C√°lculos de Investimento/Lucro ‚úÖ
----------------------------------------------
1. Selecione 2-3 produtos diferentes
2. Ajuste quantidades para cada um
3. ‚úÖ VERIFICAR nas estat√≠sticas do topo:
   - "X Produtos (Y un)" - Y deve ser soma das quantidades
   - "Investimento Total" - deve considerar qtd customizada
   - "Lucro Projetado" - deve considerar qtd customizada
4. Exemplo:
   - Produto A: 2 unidades √ó R$ 100 = R$ 200
   - Produto B: 3 unidades √ó R$ 50 = R$ 150
   - Total: 2 produtos (5 un) - Investimento R$ 350


üêõ TROUBLESHOOTING:
===================

Se os controles ainda n√£o funcionarem:

1. Abra DevTools (F12)
2. V√° para Console
3. Digite: typeof incrementQuantity
   - ‚úÖ Deve retornar: "function"
4. Digite: typeof decrementQuantity
   - ‚úÖ Deve retornar: "function"
5. Digite: typeof updateQuantity
   - ‚úÖ Deve retornar: "function"

Se retornar "undefined":
- As fun√ß√µes n√£o est√£o no escopo global
- Verifique se o arquivo foi salvo corretamente
- Limpe cache do navegador (Ctrl+Shift+Delete)

Se os bot√µes n√£o respondem:
- Verifique Console por erros JavaScript
- Procure por mensagens de log
- Certifique-se que produtos foram carregados


üìä LOGS ESPERADOS NO CONSOLE:
==============================

Ao clicar em "+":
```
Incrementando quantidade do produto abc123: 1 -> 2
```

Ao clicar em "-":
```
Decrementando quantidade do produto abc123: 2 -> 1
```

Ao digitar no input:
```
Atualizando quantidade do produto abc123: 5
```

Ao tentar exceder estoque:
```
Quantidade m√°xima atingida para produto abc123: 10
```

Ao tentar ir abaixo de 1:
```
Quantidade m√≠nima atingida para produto abc123: 1
```


‚úÖ CHECKLIST FINAL:
===================

Admin (v6.6):
- [ ] Modal abre com dados corretos
- [ ] Modal mostra dados atualizados ap√≥s edi√ß√£o
- [ ] Sem erros no console

Cliente (v6.2):
- [ ] Bot√£o + funciona
- [ ] Bot√£o - funciona
- [ ] Input aceita digita√ß√£o
- [ ] Limites s√£o respeitados (1 a estoque)
- [ ] Estat√≠sticas atualizam em tempo real
- [ ] Investimento individual calcula correto
- [ ] Persist√™ncia funciona ap√≥s reload
- [ ] Clique no card n√£o interfere com controles
- [ ] Console mostra logs esperados


üéØ RESULTADO ESPERADO:
======================

‚úÖ Admin: Modal sempre mostra dados atualizados
‚úÖ Cliente: Controles de quantidade 100% funcionais
‚úÖ Cliente: C√°lculos corretos baseados em quantidade customizada
‚úÖ Cliente: Experi√™ncia fluida sem bugs de intera√ß√£o


üìÖ Data da Corre√ß√£o: 2025-10-21
üîñ Vers√µes: admin-v6.6.html + cliente-analise-v6.2.html
